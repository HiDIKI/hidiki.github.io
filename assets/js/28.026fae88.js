(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{235:function(t,s,n){"use strict";n.r(s);var a=n(0),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"event-loop"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#event-loop"}},[t._v("#")]),t._v(" * Event Loop")]),t._v(" "),n("Author",{attrs:{name:"Juunone"}}),t._v(" "),n("p",[t._v('자바스크립트는 "단일 스레드" 기반의 언어이다.'),n("br"),t._v("\n동시에 하나의 작업만들 처리할 수 있다는 말인데, 자바스크립트가 사용되는 환경에서는 많은 작업이 동시에 처리된다.\n예를들어 마우스 입력 및 키보드 입력을 받는 일들을 동시에 처리하거나, 다수의 네트워크 요청을 처리하기도 한다.")]),t._v(" "),n("p",[n("strong",[t._v('자바스크립트는 "이벤트 루프"에 기반한 동시성(concurrency) 모델을 가지고 있다.')]),n("br"),t._v(" "),n("strong",[t._v('즉 "이벤트 루프" 를 통해 비동기 방식으로 동시성을 지원한다.')])]),t._v(" "),n("h2",{attrs:{id:"javascript-engine"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#javascript-engine"}},[t._v("#")]),t._v(" Javascript Engine")]),t._v(" "),n("ul",[n("li",[t._v("Javascript Engine은 자바스크립트로 작성한 코드를 해석하고 실행하는 "),n("strong",[t._v("인터프리터")]),t._v("다.")]),t._v(" "),n("li",[t._v("자바스크립트 엔진은 세가지 영역으로 나뉜다.\n"),n("ul",[n("li",[t._v("Call stack")]),t._v(" "),n("li",[t._v("Task Queue(Event Queue)")]),t._v(" "),n("li",[t._v("Heap")])])])]),t._v(" "),n("p",{staticStyle:{"text-align":"center"}},[n("img",{attrs:{src:t.$withBase("/js-event-loop/javascript_engine.png"),alt:"javascript_engine"}})]),t._v(" "),n("blockquote",[n("p",[n("a",{attrs:{href:"https://blog.sessionstack.com/how-does-javascript-actually-work-part-1-b0bacc073cf",target:"_blank",rel:"noopener noreferrer"}},[t._v("출처 : Alexander Zlatkov Medium"),n("OutboundLink")],1)])]),t._v(" "),n("h3",{attrs:{id:"stack"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#stack"}},[t._v("#")]),t._v(" Stack")]),t._v(" "),n("p",[t._v('자바스크립트의 함수가 실행되는 방식을 "Run to Completion" 이라고 말한다.'),n("br"),t._v("\n하나의 함수가 실행되면 이 함수의 실행이 종료될때까지 어떤 작업도 중간에 실행되지 못한다."),n("br"),t._v("\n현재 스택에 쌓여있는 모든 함수들이 실행을 마치고 스택에서 제거되면 다음 요청을 순차적으로 호출 스택에 담아 처리한다.")]),t._v(" "),n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("baz")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello from baz'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("bar")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("baz")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("bar")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br")])]),n("p",[t._v("위 코드는 아래 그림과 같이 작동한다.")]),t._v(" "),n("p",{staticStyle:{"text-align":"center"}},[n("img",{attrs:{src:t.$withBase("/js-event-loop/stack_frame.gif"),alt:"stack_frame"}})]),t._v(" "),n("blockquote",[n("p",[n("a",{attrs:{href:"https://itnext.io/how-javascript-works-in-browser-and-node-ab7d0d09ac2f",target:"_blank",rel:"noopener noreferrer"}},[t._v("출처 : ITNEXT Medium"),n("OutboundLink")],1)])]),t._v(" "),n("h3",{attrs:{id:"heap"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#heap"}},[t._v("#")]),t._v(" Heap")]),t._v(" "),n("p",[t._v("동적으로 생성된 객체(인스턴스)들은 힙 안에 할당됩니다. 힙은 구조화되지 않은 넓은 메모리 영역을 지칭한다.")]),t._v(" "),n("h3",{attrs:{id:"queue"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#queue"}},[t._v("#")]),t._v(" Queue")]),t._v(" "),n("p",[t._v("자바스크립트 런타임 환경에서 처리해야하는 Task들을 임시로 저장하는곳이다.\n태스크큐는 콜백 함수들이 대기하는 큐형태의 배열이고, "),n("strong",[t._v("이벤트루프")]),t._v("는 호출 스택이 비워질 때마다 태스트큐에서 함수들을 꺼내서 다시 스택으로 넣어주고 실행하는 역할을 해준다.")]),t._v(" "),n("h2",{attrs:{id:"event-loop-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#event-loop-2"}},[t._v("#")]),t._v(" Event Loop")]),t._v(" "),n("p",[t._v("앞서 설명과 같이 "),n("strong",[t._v("이벤트루프")]),t._v("는 콜스택과 콜백큐를 감시하면서 콜스택이 비어있을경우 콜백큐에서 첫번째 이벤트를 가져와 콜스택에 밀어넣는 역할을 하며, 결과적으로 해당 이벤트가 실행된다.")]),t._v(" "),n("p",[t._v("한가지 가정을 해보자면 많은 시간을 소모하는 함수가 stack에 push 된다면, 싱글스레드 기반의 자바스크립트는 해당 함수가 끝날떄까지\n아무런 추가 작업을 하지 못하는 상황이 발생할 수 있다. 사용자 관점에서는 브라우저가 먹통처럼 보일 수 있다.\n이런 문제를 해결하기 위해 자바스크립트 엔진이 아닌 "),n("strong",[t._v("Web API")]),t._v("에 정의되어있는 함수들은 비동기(콜백)로 실행된다.")]),t._v(" "),n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[t._v("console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Start'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Time-out'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'End'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Start")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// End")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 5초뒤 Time-out")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br")])]),n("p",[t._v("위 코드를 실행하면 'Start', 'End', 'Time-out' 순으로 출력이 되는걸 확인 할 수 있다."),n("br"),t._v("\n먼저 스택에 \"console.log('Start')\" push 되고 'Start' 를 출력하고 스택을 나간다."),n("br"),t._v("\n다음 setTimeout() 함수가 스택에 push 되지만 5초뒤에 작동할 함수를 스택에 쌓아둘 수 없다.\n스택에 쌓아두지 않고 따로 처리를 하게된다.\n그다음 스택에 \"console.log('End')\" 가 push 되고 'End' 를 출력한뒤\n5초뒤 \"console.log('Time-out')\"이 스택에 push 되고, 마지막으로 'Time-out'을 출력한다.")]),t._v(" "),n("blockquote",[n("p",[t._v("위 자바스크립트 엔진 그림에서 Web APIs 영역을 확인 할 수 있다.")])]),t._v(" "),n("p",{staticStyle:{"text-align":"center"}},[n("img",{attrs:{src:t.$withBase("/js-event-loop/settimeout1.png"),alt:"settimeout1"}})]),t._v("\nsetTimeout 콜백함수는 Web APIs로 보내지고 스택에서 pop 된다.\n"),n("p",{staticStyle:{"text-align":"center"}},[n("img",{attrs:{src:t.$withBase("/js-event-loop/settimeout2.png"),alt:"settimeout1"}})]),t._v("\nWeb APIs timer 5초뒤 작업이 끝나면 태스크큐로 옮겨진다.\n"),n("p",{staticStyle:{"text-align":"center"}},[n("img",{attrs:{src:t.$withBase("/js-event-loop/settimeout3.png"),alt:"settimeout1"}})]),t._v("\n이벤트루프는 콜스택이 비어있는지 확인하고 태스트큐의 첫번째 함수를 콜스택으로 push 해주고 이벤트가 실행된다.\n단, 콜스택이 비워있는 상태가 아니라면 태스트큐에 있는 작업을 콜스택으로 push 하지 않는다.\n"),n("blockquote",[n("p",[n("a",{attrs:{href:"https://youtu.be/8aGhZQkoFbQ",target:"_blank",rel:"noopener noreferrer"}},[t._v("출처 : Philip Roberts"),n("OutboundLink")],1)])]),t._v(" "),n("h2",{attrs:{id:"reference"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#reference"}},[t._v("#")]),t._v(" Reference")]),t._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[t._v("참조")]),t._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://developer.mozilla.org/ko/docs/Web/JavaScript/EventLoop",target:"_blank",rel:"noopener noreferrer"}},[t._v("MDN web docs[Event loop]"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("a",{attrs:{href:"https://blog.sessionstack.com/how-javascript-works-event-loop-and-the-rise-of-async-programming-5-ways-to-better-coding-with-2f077c4438b5",target:"_blank",rel:"noopener noreferrer"}},[t._v("Sessionstack blog"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("a",{attrs:{href:"https://2014.jsconf.eu/speakers/philip-roberts-what-the-heck-is-the-event-loop-anyway.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Philip Roberts - Talk on the Event loop"),n("OutboundLink")],1),t._v(" 30분짜리 훌륭한 비디오.")]),t._v(" "),n("li",[n("a",{attrs:{href:"http://latentflip.com/loupe",target:"_blank",rel:"noopener noreferrer"}},[t._v("Philip Roberts의 자바스크립트 엔진 시각화 도구: Loupe"),n("OutboundLink")],1)])])])],1)}),[],!1,null,null,null);s.default=e.exports}}]);